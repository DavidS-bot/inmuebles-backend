version: '3.8'

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: inmuebles
      POSTGRES_USER: inmuebles
      POSTGRES_PASSWORD: ${DB_PASSWORD:-inmuebles123!}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./data/backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inmuebles -d inmuebles"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - inmuebles-net

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg2://inmuebles:${DB_PASSWORD:-inmuebles123!}@db:5432/inmuebles
      JWT_SECRET: ${JWT_SECRET:-super-secret-change-this-in-production}
      APP_DATA_DIR: /app/data
      ENVIRONMENT: production
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    networks:
      - inmuebles-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: ./inmuebles-web
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:8000}
      NODE_ENV: production
    ports:
      - "3000:3000"
    networks:
      - inmuebles-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - web
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    networks:
      - inmuebles-net

volumes:
  pgdata:

networks:
  inmuebles-net:
    driver: bridge